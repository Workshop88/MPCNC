# #######################################
#
# HAL file for BeagleBone + CRAMPS 5 steppers
# 
# Derived from example hm2-stepper config
# Cramps schematic can be found here http://reprap.org/mediawiki/images/5/5a/CRAMPS.v2.1.sch.pdf
# ########################################



# Launch the setup script to make sure hardware setup looks good
loadusr -w ./setup.sh


# ###################################
# Core EMC/HAL Loads
# ###################################

##################################################
# kinematics  
# http://www.machinekit.io/docs/man/man9/kins/
##################################################
loadrt trivkins

##########################################################################
# motion controller, get name and thread periods from ini file  
# trajectory planner(machinekit specific)
#http://blog.machinekit.io/2015/02/loadable-trajectory-modules.html
#########################################################################
loadrt tp

###########################################################################################
# loads motmod see http://linuxcnc.org/docs/html/man/man9/motion.9.html
# Basically motmod takes in a list of waypoints and generates a nice blended and constraint-limited stream 
# of joint positions to be fed to the motor drives.
###########################################################
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES tp=tp kins=trivkins

##################################
# load low-level drivers
##################################
#see ??
loadrt hal_bb_gpio output_pins=816,826,914,923,925 input_pins=807,808,809,810,817,911,913

########################################################################################
# loads hal_pru_generic see http://www.machinekit.io/docs/man/man9/hal_pru_generic/
########################################################################################
loadrt [PRUCONF](DRIVER) prucode=$(HAL_RTMOD_DIR)/[PRUCONF](PRUBIN) [PRUCONF](CONFIG) halname=hpg

###############################################################
# See http://linuxcnc.org/docs/html/man/man9/pid.9.html
# this is used with 3d printers not using this for a mill
###############################################################
#loadrt pid count=2

##########################################################################
#for gantry see see http://www.machinekit.io/docs/man/man9/gantry/
#newinst see?
##########################################################################
newinst gantry gantryX.0 pincount=2
newinst gantry gantryY.0 pincount=2


################################################################
#see http://linuxcnc.org/docs/html/man/man9/limit1.9.html
################################################################
loadrt limit1 count=2
 
#################################################################################################
# Python user-mode HAL module to read ADC value and generate a thermostat output for PWM
# c = analog input channel and thermistor table
#################################################################################################
#loadusr -Wn Therm hal_temp_bbb -n Therm -c 04:epcos_B57560G1104,05:epcos_B57560G1104 -b CRAMPS

# ################################################
# THREADS
# see http://www.machinekit.io/docs/hal/basic_hal/#addf-a-id-sub-addf-a
# ################################################

addf hpg.capture-position                 servo-thread
addf bb_gpio.read                         servo-thread
addf motion-command-handler               servo-thread
addf gantryX.0.read                        servo-thread
addf gantryY.0.read                        servo-thread

addf motion-controller                    servo-thread
#addf pid.0.do-pid-calcs                   servo-thread
#addf pid.1.do-pid-calcs                   servo-thread
addf gantryX.0.write                       servo-thread
addf gantryY.0.write                       servo-thread


addf limit1.0                             servo-thread
addf limit1.1                             servo-thread
addf hpg.update                           servo-thread
addf bb_gpio.write                        servo-thread


# ######################################################
# Axis-of-motion Specific Configs (not the GUI)
# ######################################################


# ################
# X Axis gantry
# ################

# x-axis gantry
net x1pos-cmd gantryX.0.joint.00.pos-cmd => hpg.stepgen.00.position-cmd
net x1pos-fb  gantryX.0.joint.00.pos-fb  <= hpg.stepgen.00.position-fb
net x2pos-cmd gantryX.0.joint.01.pos-cmd => hpg.stepgen.01.position-cmd
net x2pos-fb  gantryX.0.joint.01.pos-fb  <= hpg.stepgen.01.position-fb
net xpos-cmd  gantryX.0.position-cmd     <= axis.0.motor-pos-cmd
net xpos-fb   gantryX.0.position-fb      => axis.0.motor-pos-fb
net xenable axis.0.amp-enable-out => hpg.stepgen.00.enable hpg.stepgen.01.enable
setp gantryX.0.search-vel [AXIS_0]HOME_SEARCH_VEL

# x1-axis
setp hpg.stepgen.00.position-scale [AXIS_0]SCALE
setp hpg.stepgen.00.steplen        [AXIS_0]STEPLEN
setp hpg.stepgen.00.stepspace      [AXIS_0]STEPSPACE
setp hpg.stepgen.00.dirhold        [AXIS_0]DIRHOLD
setp hpg.stepgen.00.dirsetup       [AXIS_0]DIRSETUP
setp hpg.stepgen.00.maxaccel [AXIS_0]STEPGEN_MAX_ACC


#setp hpg.stepgen.00.step_type       0
# P8.43 PRU1.out2
setp hpg.stepgen.00.steppin        813
# P8.44 PRU1.out4
setp hpg.stepgen.00.dirpin         812

# x2-axis
setp hpg.stepgen.01.position-scale [AXIS_0]SCALE
setp hpg.stepgen.01.steplen [AXIS_0]STEPLEN
setp hpg.stepgen.01.stepspace [AXIS_0]STEPSPACE
setp hpg.stepgen.01.dirhold [AXIS_0]DIRHOLD
setp hpg.stepgen.01.dirsetup [AXIS_0]DIRSETUP
setp hpg.stepgen.01.maxaccel [AXIS_0]STEPGEN_MAX_ACC

#setp hpg.stepgen.01.steppin         52
#setp hpg.stepgen.01.dirpin          147
#setp hpg.stepgen.01.step_type       0
# P8.30 GPIO2.25
setp hpg.stepgen.01.steppin        916
# P8.21 GPIO1.30
setp hpg.stepgen.01.dirpin         912

# y-axis gantry
# some info on net http://www.machinekit.io/docs/hal/basic_hal/#net-a-id-sub-net-a
net y1pos-cmd gantryY.0.joint.00.pos-cmd => hpg.stepgen.02.position-cmd
net y1pos-fb  gantryY.0.joint.00.pos-fb  <= hpg.stepgen.02.position-fb
net y2pos-cmd gantryY.0.joint.01.pos-cmd => hpg.stepgen.03.position-cmd
net y2pos-fb  gantryY.0.joint.01.pos-fb  <= hpg.stepgen.03.position-fb
net ypos-cmd  gantryY.0.position-cmd     <= axis.1.motor-pos-cmd
net ypos-fb   gantryY.0.position-fb      => axis.1.motor-pos-fb
net yenable axis.1.amp-enable-out => hpg.stepgen.02.enable hpg.stepgen.03.enable
setp gantryY.0.search-vel [AXIS_1]HOME_SEARCH_VEL

# y1-axis
setp hpg.stepgen.02.position-scale [AXIS_1]SCALE
setp hpg.stepgen.02.steplen [AXIS_1]STEPLEN
setp hpg.stepgen.02.stepspace [AXIS_1]STEPSPACE
setp hpg.stepgen.02.dirhold [AXIS_1]DIRHOLD
setp hpg.stepgen.02.dirsetup [AXIS_1]DIRSETUP
setp hpg.stepgen.02.maxaccel [AXIS_1]STEPGEN_MAX_ACC

#setp hpg.stepgen.01.steppin         144
#setp hpg.stepgen.01.dirpin          145
#setp hpg.stepgen.02.step_type       0
# P8.42 PRU1.out5
setp hpg.stepgen.02.steppin        815
# P8.39 PRU1.out6
setp hpg.stepgen.02.dirpin         814

# y2-axis
setp hpg.stepgen.03.position-scale [AXIS_1]SCALE
setp hpg.stepgen.03.steplen [AXIS_1]STEPLEN
setp hpg.stepgen.03.stepspace [AXIS_1]STEPSPACE
setp hpg.stepgen.03.dirhold [AXIS_1]DIRHOLD
setp hpg.stepgen.03.dirsetup [AXIS_1]DIRSETUP
setp hpg.stepgen.03.maxaccel [AXIS_1]STEPGEN_MAX_ACC

#setp hpg.stepgen.02.steppin         52
#setp hpg.stepgen.02.dirpin          147
#setp hpg.stepgen.03.step_type       0
setp hpg.stepgen.03.steppin        917
setp hpg.stepgen.03.dirpin         918

# z-axis
setp hpg.stepgen.04.position-scale [AXIS_2]SCALE
setp hpg.stepgen.04.steplen [AXIS_2]STEPLEN
setp hpg.stepgen.04.stepspace [AXIS_2]STEPSPACE
setp hpg.stepgen.04.dirhold [AXIS_2]DIRHOLD
setp hpg.stepgen.04.dirsetup [AXIS_2]DIRSETUP
setp hpg.stepgen.04.maxaccel [AXIS_2]STEPGEN_MAX_ACC
net zpos-cmd axis.2.motor-pos-cmd => hpg.stepgen.04.position-cmd
net zpos-fb hpg.stepgen.04.position-fb => axis.2.motor-pos-fb
net zenable axis.2.amp-enable-out => hpg.stepgen.04.enable

#setp hpg.stepgen.03.steppin         39
#setp hpg.stepgen.03.dirpin          149

#setp hpg.stepgen.04.step_type       0
# P8.27 PRU1.out8
setp hpg.stepgen.04.steppin        819
# P8.29 PRU1.out9
setp hpg.stepgen.04.dirpin         818

########################################################
# GETTING THE GANTRY HOME SWITCHES SETUP
########################################################
# TODO this can be deleted just a refer to the cramps pins
#net limit-x-min <= bb_gpio.p8.in-08
#net limit-x-max <= bb_gpio.p8.in-07
#net limit-y-min <= bb_gpio.p8.in-10
#net limit-y-max <= bb_gpio.p8.in-09
#net limit-z-min <= bb_gpio.p9.in-13
#net limit-z-max <= bb_gpio.p9.in-11



####################################
### X- AXIS GANTRY  ################
####################################
# debounce the X-axis switches and connect them to signals
net switches-x1 	<= bb_gpio.p8.in-08
net switches-x2 	<= bb_gpio.p8.in-07

# join the home switch signals so that both switches have to be closed to trigger a home position
net switches-x1		=> gantryX.0.joint.00.home
net switches-x2		=> gantryX.0.joint.01.home
net home-x 		<= gantryX.0.home
net home-x 		=> axis.0.home-sw-in
net limit-x		<= gantryX.0.limit
net limit-x		=> axis.0.neg-lim-sw-in

####################################
### Y- AXIS GANTRY  ################
####################################
# debounce the y-axis switches and connect them to signals
net switches-y1 	<= bb_gpio.p8.in-10
net switches-y2 	<= bb_gpio.p8.in-09

# join the home switch signals so that both switches have to be closed to trigger a home position
net switches-y1		=> gantryY.0.joint.00.home
net switches-y2		=> gantryY.0.joint.01.home
net home-y 		<= gantryY.0.home
net home-y 		=> axis.1.home-sw-in
net limit-y		<= gantryY.0.limit
net limit-y		=> axis.1.neg-lim-sw-in


# This is a todo. I don't have have Z limit switches built yet for my MPCNC
#net switches-z 		<= bb_gpio.p8.in-18
#net switches-z 		=> axis.2.home-sw-in
#net switches-z		=> axis.2.pos-lim-sw-in




# axis enable chain
#newsig emcmot.00.enable bit
#sets emcmot.00.enable FALSE

#net emcmot.00.enable <= axis.0.amp-enable-out
#net emcmot.00.enable => hpg.stepgen.00.enable


# position command and feedback
#net emcmot.00.pos-cmd <= axis.0.motor-pos-cmd
#net emcmot.00.pos-cmd => hpg.stepgen.00.position-cmd

#net motor.00.pos-fb <= hpg.stepgen.00.position-fb
#net motor.00.pos-fb => axis.0.motor-pos-fb


# timing parameters
#setp hpg.stepgen.00.dirsetup        [AXIS_0]DIRSETUP
#setp hpg.stepgen.00.dirhold         [AXIS_0]DIRHOLD

#setp hpg.stepgen.00.steplen         [AXIS_0]STEPLEN
#setp hpg.stepgen.00.stepspace       [AXIS_0]STEPSPACE

#setp hpg.stepgen.00.position-scale  [AXIS_0]SCALE

#setp hpg.stepgen.00.maxvel          [AXIS_0]STEPGEN_MAX_VEL
#setp hpg.stepgen.00.maxaccel        [AXIS_0]STEPGEN_MAX_ACC

#setp hpg.stepgen.00.step_type       0
# P8.43 PRU1.out2
#setp hpg.stepgen.00.steppin        813
# P8.44 PRU1.out4
#setp hpg.stepgen.00.dirpin         812


# ################
# Y [1] Axis
# ################

# axis enable chain
#newsig emcmot.01.enable bit
#sets emcmot.01.enable FALSE

#net emcmot.01.enable <= axis.1.amp-enable-out
#net emcmot.01.enable => hpg.stepgen.01.enable


# position command and feedback
#net emcmot.01.pos-cmd <= axis.1.motor-pos-cmd
#net emcmot.01.pos-cmd => hpg.stepgen.01.position-cmd

#net motor.01.pos-fb <= hpg.stepgen.01.position-fb
#net motor.01.pos-fb => axis.1.motor-pos-fb


# timing parameters
#setp hpg.stepgen.01.dirsetup        [AXIS_1]DIRSETUP
#setp hpg.stepgen.01.dirhold         [AXIS_1]DIRHOLD

#setp hpg.stepgen.01.steplen         [AXIS_1]STEPLEN
#setp hpg.stepgen.01.stepspace       [AXIS_1]STEPSPACE

#setp hpg.stepgen.01.position-scale  [AXIS_1]SCALE

#setp hpg.stepgen.01.maxvel          [AXIS_1]STEPGEN_MAX_VEL
#setp hpg.stepgen.01.maxaccel        [AXIS_1]STEPGEN_MAX_ACC

#setp hpg.stepgen.01.step_type       0
# P8.42 PRU1.out5
#setp hpg.stepgen.01.steppin        815
# P8.39 PRU1.out6
#setp hpg.stepgen.01.dirpin         814


# ################
# Z [2] Axis
# ################

# axis enable chain
#newsig emcmot.02.enable bit
#sets emcmot.02.enable FALSE

#net emcmot.02.enable <= axis.2.amp-enable-out
#net emcmot.02.enable => hpg.stepgen.02.enable


# position command and feedback
#net emcmot.02.pos-cmd <= axis.2.motor-pos-cmd
#net emcmot.02.pos-cmd => hpg.stepgen.02.position-cmd

#net motor.02.pos-fb <= hpg.stepgen.02.position-fb
#net motor.02.pos-fb => axis.2.motor-pos-fb


# timing parameters
#setp hpg.stepgen.02.dirsetup        [AXIS_2]DIRSETUP
#setp hpg.stepgen.02.dirhold         [AXIS_2]DIRHOLD

#setp hpg.stepgen.02.steplen         [AXIS_2]STEPLEN
#setp hpg.stepgen.02.stepspace       [AXIS_2]STEPSPACE

#setp hpg.stepgen.02.position-scale  [AXIS_2]SCALE

#setp hpg.stepgen.02.maxvel          [AXIS_2]STEPGEN_MAX_VEL
#setp hpg.stepgen.02.maxaccel        [AXIS_2]STEPGEN_MAX_ACC

#setp hpg.stepgen.02.step_type       0
# P8.27 PRU1.out8
#setp hpg.stepgen.02.steppin        819
# P8.29 PRU1.out9
#setp hpg.stepgen.02.dirpin         818


# ##############################
# A [3] Axis Extra X Axis Gantry
# ##############################

# axis enable chain
#newsig emcmot.03.enable bit
#sets emcmot.03.enable FALSE

#net emcmot.03.enable <= axis.3.amp-enable-out
#net emcmot.03.enable => hpg.stepgen.03.enable


# position command and feedback
#net emcmot.03.pos-cmd <= axis.3.motor-pos-cmd
#net emcmot.03.pos-cmd => hpg.stepgen.03.position-cmd

#net motor.03.pos-fb <= hpg.stepgen.03.position-fb
#net motor.03.pos-fb => axis.3.motor-pos-fb


# timing parameters
#setp hpg.stepgen.03.dirsetup        [AXIS_3]DIRSETUP
#setp hpg.stepgen.03.dirhold         [AXIS_3]DIRHOLD

#setp hpg.stepgen.03.steplen         [AXIS_3]STEPLEN
#setp hpg.stepgen.03.stepspace       [AXIS_3]STEPSPACE

#setp hpg.stepgen.03.position-scale  [AXIS_3]SCALE

#setp hpg.stepgen.03.maxvel          [AXIS_3]STEPGEN_MAX_VEL
#setp hpg.stepgen.03.maxaccel        [AXIS_3]STEPGEN_MAX_ACC

#setp hpg.stepgen.03.step_type       0
# P8.30 GPIO2.25
#setp hpg.stepgen.03.steppin        916
# P8.21 GPIO1.30
#setp hpg.stepgen.03.dirpin         912

# ##############################
# A [4] Axis Extra Y Axis Gantry
# THIS iS THE E1 drive on the cramps drive
# ##############################

# axis enable chain
#newsig emcmot.04.enable bit
#sets emcmot.04.enable FALSE

#net emcmot.04.enable <= axis.4.amp-enable-out
#net emcmot.04.enable => hpg.stepgen.04.enable


# position command and feedback
#net emcmot.04.pos-cmd <= axis.4.motor-pos-cmd
#net emcmot.04.pos-cmd => hpg.stepgen.04.position-cmd

#net motor.04.pos-fb <= hpg.stepgen.04.position-fb
#net motor.04.pos-fb => axis.4.motor-pos-fb


# timing parameters
#setp hpg.stepgen.04.dirsetup        [AXIS_4]DIRSETUP
#setp hpg.stepgen.04.dirhold         [AXIS_4]DIRHOLD

#setp hpg.stepgen.04.steplen         [AXIS_4]STEPLEN
#setp hpg.stepgen.04.stepspace       [AXIS_4]STEPSPACE

#setp hpg.stepgen.04.position-scale  [AXIS_4]SCALE

#setp hpg.stepgen.04.maxvel          [AXIS_4]STEPGEN_MAX_VEL
#setp hpg.stepgen.04.maxaccel        [AXIS_4]STEPGEN_MAX_ACC

#setp hpg.stepgen.04.steppin        917
#setp hpg.stepgen.04.dirpin         918




# ##################################################
# Standard I/O - EStop, Enables, Limit Switches, Etc
# ##################################################

# Create estop signal chain
# Drive software estop to hardware
net estop-out iocontrol.0.user-enable-out => bb_gpio.p8.out-26
setp bb_gpio.p8.out-26.invert 1

# Monitor estop input from hardware
net estop-loop bb_gpio.p8.in-17 => iocontrol.0.emc-enable-in
setp bb_gpio.p8.in-17.invert 1

# create signals for tool loading loopback
net tool-prep-loop iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change => iocontrol.0.tool-changed

# Axis enable signal (active low)
#net emcmot.00.enable => bb_gpio.p9.out-14
net xenable => bb_gpio.p9.out-14
setp bb_gpio.p9.out-14.invert 1

# Machine power
# Use halui.machine.is-on instead?
#net emcmot.00.enable => bb_gpio.p9.out-23
net xenable => bb_gpio.p9.out-23

# Tie machine power signal to the CRAMPS LED
# Feel free to tie any other signal you like to the LED
#net emcmot.00.enable => bb_gpio.p9.out-25
net xenable => bb_gpio.p9.out-25

# ################
# Limit Switches
# ################
#newsig limit-x-min bit
#newsig limit-x-max bit
#newsig limit-y-min bit
#newsig limit-y-max bit
#newsig limit-z-min bit
#newsig limit-z-max bit

#net limit-x-min <= bb_gpio.p8.in-08
#net limit-x-max <= bb_gpio.p8.in-07
#net limit-y-min <= bb_gpio.p8.in-10
#net limit-y-max <= bb_gpio.p8.in-09
#net limit-z-min <= bb_gpio.p9.in-13
#net limit-z-max <= bb_gpio.p9.in-11

# Adjust as needed for your switch polarity
#setp bb_gpio.p8.in-08.invert 1
#setp bb_gpio.p8.in-07.invert 1
#setp bb_gpio.p8.in-10.invert 1
#setp bb_gpio.p8.in-09.invert 1
#setp bb_gpio.p9.in-11.invert 1
#setp bb_gpio.p9.in-13.invert 1

# Uncomment if you actually have limit switches setup
# You probably want to setup homing in the INI file, as well
#net limit-x-min => axis.0.home-sw-in
#net limit-x-min => axis.0.neg-lim-sw-in
#net limit-x-max => axis.0.pos-lim-sw-in
#net limit-y-min => axis.1.home-sw-in
#net limit-y-min => axis.1.neg-lim-sw-in
#net limit-y-max => axis.1.pos-lim-sw-in
#net limit-z-min => axis.2.home-sw-in
#net limit-z-min => axis.2.neg-lim-sw-in
#net limit-z-max => axis.2.pos-lim-sw-in

# ################
# Servo signals
# ################

# There is currently no driver to generate pulses for actual
# radio-control style servos, but the buffered 5V output
# signals can be used as GPIO

# !!! WARNING !!!
# BBB on-board eMMC *MUST* be disabled in order to use these!
# Drive eMMC-disabled signal high to enable signals that overlap
# with the eMMC pins on P8, otherwise they are tri-stated
#
# You also need to edit the setup.sh file to enable the GPIO pins

# Signal the hardware that eMMC has been disabled and it is safe
# to drive the signals connected to eMMC lines (active low)
newsig eMMC-disabled bit
sets eMMC-disabled 0
net eMMC-disabled bb_gpio.p8.out-16
setp bb_gpio.p8.out-16.invert 1

# Servo signals, output only, driven by an 'ACT125

#newsig servo.1 bit
#newsig servo.2 bit
#newsig servo.3 bit
#newsig servo.4 bit

#sets servo.1 0
#sets servo.2 0
#sets servo.3 0
#sets servo.4 0

#net servo.1 bb_gpio.p8.out-25
#net servo.2 bb_gpio.p8.out-24
#net servo.3 bb_gpio.p8.out-23
#net servo.4 bb_gpio.p8.out-22


# ##################################################
# PWM and Temperature Signals
# ##################################################

# Define signals to use elsewhere (ie: M1xx codes)
# If you change any names here, lots of things will break!
newsig e0.temp.set   float
newsig e0.temp.meas  float
newsig bed.temp.set  float
newsig bed.temp.meas float


setp hpg.pwmgen.00.pwm_period       10000000

# Bed Heater FET 1
setp hpg.pwmgen.00.out.00.pin       811
setp hpg.pwmgen.00.out.00.enable    1
setp hpg.pwmgen.00.out.00.value     0.0

# E0 Heater FET 2
setp hpg.pwmgen.00.out.01.pin       915
setp hpg.pwmgen.00.out.01.enable    1
setp hpg.pwmgen.00.out.01.value     0.0

# E1 Heater FET 3
setp hpg.pwmgen.00.out.02.pin       927
setp hpg.pwmgen.00.out.02.enable    1
setp hpg.pwmgen.00.out.02.value     0.0

# E2 Heater FET 4
setp hpg.pwmgen.00.out.03.pin       921
setp hpg.pwmgen.00.out.03.enable    1
setp hpg.pwmgen.00.out.03.value     0.0

# FET 5 - Fan / LED
setp hpg.pwmgen.00.out.04.pin       941
setp hpg.pwmgen.00.out.04.enable    1
setp hpg.pwmgen.00.out.04.value     0.0

# FET 6 - Fan / LED
setp hpg.pwmgen.00.out.05.pin       922
setp hpg.pwmgen.00.out.05.enable    1
setp hpg.pwmgen.00.out.05.value     0.0

# PID for Extruder 0 temperature control
#net e0.temp.meas    <= Therm.ch-04.value
#net e0.temp.meas    => pid.0.feedback

#sets e0.temp.set  0
#net e0.temp.set     => pid.0.command

#net e0.heater  <= pid.0.output
#net e0.heater  => limit1.0.in
#net e0.heaterl <= limit1.0.out
#net e0.heaterl => hpg.pwmgen.00.out.01.value

# Limit heater PWM to positive values
# PWM mimics hm2 implementation, which generates output for negative values
setp limit1.0.min 0

# PID for Bed temperature control
#net bed.temp.meas    <= Therm.ch-05.value
#net bed.temp.meas    => pid.1.feedback

#sets bed.temp.set  0
#net bed.temp.set     => pid.1.command

#net bed.heater  <= pid.1.output
#net bed.heater  => limit1.1.in
#net bed.heaterl <= limit1.1.out
#net bed.heaterl => hpg.pwmgen.00.out.00.value

# Limit heater PWM to positive values
# PWM mimics hm2 implementation, which generates output for negative values
setp limit1.1.min 0

# PID Parameters for adjusting temperature control
# Extruder
#setp pid.0.FF0      0
#setp pid.0.FF1      0
#setp pid.0.FF2      0
#setp pid.0.Pgain  0.30
#setp pid.0.Igain  0.00001
#setp pid.0.Dgain  0.9375
#setp pid.0.maxerrorI 1.0
#setp pid.0.bias    0.5
#setp pid.0.enable   1

# Bed
#setp pid.1.FF0      0
#setp pid.1.FF1      0
#setp pid.1.FF2      0
#setp pid.1.Pgain  1
#setp pid.1.Igain  0.0
#setp pid.1.Dgain  0.0
#setp pid.1.maxerrorI 1.0
#setp pid.1.bias    0.5
#setp pid.1.enable   1
